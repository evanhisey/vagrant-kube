---
- hosts: all
  gather_facts: true
  become: false

  tasks:
    - name: Install Vagrant and Ansible
      ansible.builtin.dnf:
       name:
        - vagrant
        - vagrant-libvirt
        - ansible
       state: installed
      become: true

    - name: Virtnetwork
      ansible.builtin.systemd:
       name: virtnetworkd
       enabled: true
       state: started
      become: true
    
    - name: Create Kube Vagrant directory
      ansible.builtin.file:
       path: "{{ ansible_env.PWD }}/{{ vagrantDir }}"
       state: directory
       mode: 0755


    - name: Add vagrantfile to Kube Vagrant directory
      ansible.builtin.template:
       src: "{{ item }}"
       dest: "{{ ansible_env.PWD }}/{{ vagrantDir }}/"
       mode: 0644
      with_fileglob:
        - "templates/*"
        
    - name: Add bootstrap to Kube Vagrant directory
      ansible.builtin.copy:
       src: "{{ item }}" 
       dest: "{{ ansible_env.PWD }}/{{ vagrantDir }}/"
       mode: 0644
      with_fileglob:
        - "provisioning_playbooks/*"

    - name: Start Boxes unprovisioned.
    # Currently not seeing a decent modules for controlling Vagrant from Ansible,
    # so we are going to use a shell command to make things work.
    # First run with out bootstrap
      ansible.builtin.command: 
        chdir: "{{ ansible_env.PWD }}/{{ vagrantDir }}"
        cmd: vagrant up --no-provision 
      register: vagrant_results

    - name: Vagrant VM addresses
      ansible.builtin.include_tasks:
        file: get_guest_ip.yml
 
     # Now do provision since we have the IPs for /etc/host
    - name: Run Vagrant provision
      ansible.builtin.command: 
        chdir: "{{ ansible_env.PWD }}/{{ vagrantDir }}"
        cmd: vagrant provision {{ item }}
      loop:
        - master
        - worker1
      #  - worker2  
      register: vagrant_results
      run_once: true
    
    - name: get load  cluster IPs
      ansible.builtin.slurp:
        src: "{{ ansible_env.PWD }}/{{ vagrantDir }}/vagrant_ip.txt"
      register: IPs  

    - name: add Vagrant boxes to /etc/hosts
      ansible.builtin.lineinfile:
        regexp: '{{ item | split | last }}\b'
        line: "{{ item }}"
        dest: "/etc/hosts"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ IPs.content | b64decode | trim | split('\n') }}"
      become: true
     
      




  
 

   
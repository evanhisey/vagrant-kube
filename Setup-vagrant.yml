---
- name: Playbook for vagrant+kube
  hosts: all
  gather_facts: true
  become: false

  tasks:
    - name: Install Vagrant and Ansible
      ansible.builtin.dnf:
       name:
        - vagrant
        - vagrant-libvirt
        - ansible
       state: installed
      notify: Virtnetwork
      become: true

    - name: Force all notified handler to run at this point, not waiting for normal sync points
      ansible.builtin.meta: flush_handlers
    
    - name: Create Kube Vagrant directory
      ansible.builtin.file:
       path: "{{ ansible_env.PWD }}/{{ vagrantDir }}"
       state: directory
       mode: 0755


    - name: Add vagrantfile to Kube Vagrant directory
      ansible.builtin.template:
       src: templates/vagrantfile
       dest: "{{ ansible_env.PWD }}/{{ vagrantDir }}/vagrantfile"
       mode: 0644

    - name: Add bootstrap to Kube Vagrant directory
      ansible.builtin.copy:
       src: "{{ item }}" 
       dest: "{{ ansible_env.PWD }}/{{ vagrantDir }}/"
       mode: 0644
      with_fileglob:
        - "provisioning_playbooks/*"

    - name: Start Boxes unprovisioned.
    # Currently not seeing a decent modules for controlling Vagrant from Ansible,
    # so we are going to use a shell command to make things work.
    # First run with out bootstrap
      ansible.builtin.command: 
        chdir: "{{ ansible_env.PWD }}/{{ vagrantDir }}"
        cmd: vagrant up --no-provision 
      register: vagrant_results

    - name: Report results of Vagrant
      ansible.builtin.debug:
        msg: "{{ vagrant_results.stdout_lines }}"

    - name: Vagrant VM addresses
      ansible.builtin.include_tasks:
        file: get_guest_ip.yml
 
     # Now do provision since we have the IPs for /etc/host
    - name: Run Vagrant provision master
      ansible.builtin.command: 
        chdir: "{{ ansible_env.PWD }}/{{ vagrantDir }}"
        cmd: vagrant up --provision master
      register: vagrant_results

    - name: report bootstrap
      ansible.builtin.debug:
        msg: "{{ vagrant_results.stdout_lines }}"

  handlers:
    - name: Virtnetwork
      ansible.builtin.systemd:
       name: virtnetworkd
       enabled: true
       state: restarted
      become: true

   
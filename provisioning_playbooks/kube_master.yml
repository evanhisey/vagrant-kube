---
  - name: Check if Kube is Initialize
    stat:
      path: /etc/kubernetes/manifests/kube-apiserver.yaml
    register: kube_apiserver

  - name: Check if Kube is configed for user
    stat:
      path: "{{ ansible_env.PWD }}/.kube/config"
    register: kube_config

  - name: Cluster Initialize
    block:
     - name: Initialize Master node
       ansible.builtin.command:  
         cmd: kubeadm init --ignore-preflight-errors=NumCPU --apiserver-advertise-address="{{ ansible_default_ipv4.address }}" --apiserver-cert-extra-sans="{{ ansible_default_ipv4.address }}"
# setting up on a single core host
       register: kube_results

     - name: Export Kube results
       ansible.builtin.copy:
          content: "{{ kube_results }}"
          dest: kube_results.text
          mode: 0644
       delegate_to: localhost
       become: false
    when: not kube_apiserver.stat.exists 

  - name: Setup Kube for User
    block:
    - name: Create .kube directory
      ansible.builtin.file:
        path: "{{ ansible_env.PWD }}/.kube"
        group: vagrant
        owner: vagrant
        state: directory
        mode: 0744

    - name: Copy kubeconfig for vagrant user
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.PWD }}/.kube/config"
        group: vagrant
        owner: vagrant
        remote_src: true
        mode: 0644
    when: not kube_config.stat.exists

  - name: Pause for service to spin up
    kubernetes.core.k8s_info:
      kind: Deployment
      namespace: kube-system
      label_selectors:
        - k8s-app=kube-dns
    register: kube_status
    until: kube_status is not failed
    retries: 10
    delay: 10
    become: false

  - name: load Calico
    ansible.builtin.include_tasks:
      file: calico.yml
    become: false
  
  - name: load Dashboard
    ansible.builtin.include_tasks:
      file: kube_dashboard.yml
    become: false    

  - name: Report end of run
    ansible.builtin.debug:
      msg: "{{ ansible_hostname }} run complete"
  